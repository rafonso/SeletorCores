/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ColorSliderPanel.java
 *
 * Created on 25/05/2009, 20:18:06
 */
package seletorcores;

import java.awt.Component;
import java.awt.Font;
import java.awt.event.FocusListener;
import java.awt.event.MouseWheelEvent;

/**
 *
 * @author rafael
 */
public class ColorSliderPanel extends javax.swing.JPanel {

    public static final String VALOR = "valor";
    private boolean altera = true;
    private int value;

    /** Creates new form ColorSliderPanel */
    public ColorSliderPanel() {
        initComponents();
    }

    public ColorSliderPanel(String titulo) {
        this();
        this.setTitulo(titulo);
        super.setName(titulo);
        this.sldCor.setName("sld" + titulo);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        sldCor = new javax.swing.JSlider();
        lblCor = new javax.swing.JLabel();

        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTitulo.setText("XXXX");
        lblTitulo.setMaximumSize(new java.awt.Dimension(50, 14));
        lblTitulo.setMinimumSize(new java.awt.Dimension(30, 14));
        lblTitulo.setName("lblTitulo"); // NOI18N
        lblTitulo.setPreferredSize(new java.awt.Dimension(40, 14));

        sldCor.setMajorTickSpacing(32);
        sldCor.setMaximum(255);
        sldCor.setMinorTickSpacing(8);
        sldCor.setPaintTicks(true);
        sldCor.setValue(0);
        sldCor.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                sldCorMouseWheelMoved(evt);
            }
        });
        sldCor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldCorStateChanged(evt);
            }
        });
        sldCor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sldCorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sldCorFocusLost(evt);
            }
        });

        lblCor.setLabelFor(sldCor);
        lblCor.setText("000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sldCor, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCor)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(sldCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCor.getAccessibleContext().setAccessibleName("lblCor");
    }// </editor-fold>//GEN-END:initComponents

    private void alteraValor(int valor, Component source) {
        if (source == this.sldCor) {
            this.lblCor.setText(String.format("%03d", valor));
        } else {
            throw new IllegalArgumentException("Fonte irrgular: " + source);
        }

        if (altera) {
            this.firePropertyChange(VALOR, null, this.sldCor.getValue());
        } else {
            altera = true;
        }
    }

    private void sldCorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldCorStateChanged
        this.alteraValor(this.sldCor.getValue(), this.sldCor);
    }//GEN-LAST:event_sldCorStateChanged

    private void sldCorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sldCorFocusGained
        Font f = lblTitulo.getFont();
        this.lblTitulo.setFont(f.deriveFont(f.getStyle() | Font.BOLD));
    }//GEN-LAST:event_sldCorFocusGained

    private void sldCorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sldCorFocusLost
        Font f = lblTitulo.getFont();
        this.lblTitulo.setFont(f.deriveFont(f.getStyle() ^ Font.BOLD));
    }//GEN-LAST:event_sldCorFocusLost

    private void sldCorMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_sldCorMouseWheelMoved
        int delta = ((evt.getModifiers() == MouseWheelEvent.CTRL_MASK))? 10: 1;
        this.sldCor.setValue(this.sldCor.getValue() - evt.getWheelRotation() * delta);
        this.sldCor.requestFocus();
    }//GEN-LAST:event_sldCorMouseWheelMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblCor;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JSlider sldCor;
    // End of variables declaration//GEN-END:variables

    public void setTitulo(String titulo) {
        this.lblTitulo.setText(titulo);
    }

    public String getTitulo() {
        return this.lblTitulo.getText();
    }

    public void setValor(int valor) {
        this.altera = false;
        this.sldCor.setValue(valor);
    }

    public int getValor() {
        return this.sldCor.getValue();
    }

    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
    }

    @Override
    public synchronized void addFocusListener(FocusListener l) {
        super.addFocusListener(l);
        this.sldCor.addFocusListener(l);
    }
    
}
